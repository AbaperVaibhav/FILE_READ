REPORT zzzzz1.

* Type definitions for Excel data
TYPES: BEGIN OF ty_excel,
         plnnr                TYPE plnnr,                  " Group
         plnal                TYPE plnal,                  " Group Counter
         plnfl                TYPE plnfolge,              " Sequence
         vornr                TYPE vornr,                  " Operation/Activity Number
         bom_type             TYPE stlty,                  " BOM Category
         matnr_root           TYPE matnr,                  " Material Number (Root)
         werks_root           TYPE werks_d,                " Plant (Root)
         alternative_bom_root TYPE stlal,                  " Alternative BOM (Root)
         matnr_hdr            TYPE matnr,                  " Material Number (Header)
         alternative_bom_hdr  TYPE stlal,                  " Alternative BOM (Header)
         itmid                TYPE stlkn,                  " Item ID
         posnr                TYPE posnr,                  " BOM Item Number
         postp                TYPE postp,                  " Item Category
         idnrk                TYPE idnrk,                  " Component
         ktext_component      TYPE ktext,                  " Component Description
         rgekz                TYPE rgekz,                  " Backflush Indicator
         datuv                TYPE datuv,                  " Valid From Date
         stlan_hdr            TYPE stlan,
       END OF ty_excel.

* Type for error logging
TYPES: BEGIN OF ty_log,
         row     TYPE i,
         message TYPE string,
       END OF ty_log.

* Data declarations
DATA: lt_excel                  TYPE TABLE OF ty_excel,
      ls_excel                  TYPE ty_excel,
      lt_log                    TYPE TABLE OF ty_log,
      ls_log                    TYPE ty_log,
      lt_intern                 TYPE TABLE OF alsmex_tabline,
      ls_intern                 TYPE alsmex_tabline,
      LV_file                   TYPE rlgrap-filename,
      lv_group                  TYPE plnnr,
      lv_groupcounter           TYPE plnal,
      lt_task                   TYPE TABLE OF bapi1012_tsk_c,
      ls_task                   TYPE bapi1012_tsk_c,
      lt_materialtaskallocation TYPE TABLE OF bapi1012_mtk_c,
      ls_materialtaskallocation TYPE bapi1012_mtk_c,
      lt_operations             TYPE TABLE OF bapi1012_opr_c,
      ls_operations             TYPE bapi1012_opr_c,
      ls_SEQUENCE               TYPE bapi1012_seq_c,
      lT_SEQUENCE               TYPE TABLE OF bapi1012_seq_c,
      lt_components             TYPE TABLE OF bapi1012_com_c,
      lt_textallocation         TYPE TABLE OF bapi1012_txt_hdr_c,
      lS_textallocation         TYPE bapi1012_txt_hdr_c,
      ls_components             TYPE bapi1012_com_c,
      lt_return                 TYPE TABLE OF bapiret2,
      ls_return                 TYPE bapiret2,
      lV_TESTRUN                TYPE bapiflag,
      lv_date                   TYPE char10.


"* Selection screen
PARAMETERS: p_file TYPE rlgrap-filename OBLIGATORY.

* F4 help for file selection
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
  CALL FUNCTION 'F4_FILENAME'
    EXPORTING
      program_name  = syst-cprog
      dynpro_number = syst-dynnr
      field_name    = 'P_FILE'
    IMPORTING
      file_name     = p_file.

START-OF-SELECTION.
  lv_file = p_file.

* Read XLSX file using ALSM_EXCEL_TO_INTERNAL_TABLE
  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    EXPORTING
      filename                = lv_file
      i_begin_row             = 2
      i_begin_col             = 1
      i_end_row               = 309
      i_end_col               = 18
    TABLES
      intern                  = lt_intern
    EXCEPTIONS
      inconsistent_parameters = 1
      upload_ole              = 2
      OTHERS                  = 3.
  IF sy-subrc <> 0.
    ls_log-row = 0.
    ls_log-message = |Error reading XLSX file: { lv_file }|.
    APPEND ls_log TO lt_log.
    PERFORM display_log.
    RETURN.
  ENDIF.

  DATA: lv_row TYPE i.

  CLEAR: lt_excel, ls_excel, lv_row.

* Build internal table from Excel data
  LOOP AT lt_intern INTO ls_intern.
    IF lv_row IS INITIAL OR ls_intern-row <> lv_row.
      IF ls_excel IS NOT INITIAL.
        APPEND ls_excel TO lt_excel.
        CLEAR ls_excel.
      ENDIF.
      lv_row = ls_intern-row.
    ENDIF.

    CASE ls_intern-col.
      WHEN 1.  ls_excel-plnnr                = ls_intern-value.
      WHEN 2.  ls_excel-plnal                = ls_intern-value.
      WHEN 3.  ls_excel-plnfl                = ls_intern-value.
      WHEN 4.  ls_excel-vornr                = ls_intern-value.
      WHEN 5.  ls_excel-bom_type             = ls_intern-value.
      WHEN 6.  ls_excel-matnr_root           = ls_intern-value.
      WHEN 7.  ls_excel-werks_root           = ls_intern-value.
      WHEN 8.  ls_excel-alternative_bom_root = ls_intern-value.
      WHEN 9.  ls_excel-matnr_hdr            = ls_intern-value.
      WHEN 10. ls_excel-alternative_bom_hdr  = ls_intern-value.
      WHEN 11. ls_excel-itmid                = ls_intern-value.
      WHEN 12. ls_excel-posnr                = ls_intern-value.
      WHEN 13. ls_excel-postp                = ls_intern-value.
      WHEN 14. ls_excel-idnrk                = ls_intern-value.
      WHEN 15. ls_excel-ktext_component      = ls_intern-value.
      WHEN 16. ls_excel-rgekz                = ls_intern-value.
      WHEN 17. ls_excel-datuv                = ls_intern-value.
      WHEN 18. ls_excel-stlan_hdr            = ls_intern-value.
    ENDCASE.
  ENDLOOP.
  IF ls_excel IS NOT INITIAL.
    APPEND ls_excel TO lt_excel.
  ENDIF.
